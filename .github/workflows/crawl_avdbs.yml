name: AVDBS t22 Bot (v7.8)

on:
  schedule:
    - cron: "*/10 * * * *"     # 10분마다
  workflow_dispatch:           # 수동 실행

permissions:
  contents: write              # state 파일 푸시 필요

concurrency:
  group: avdbs-t22
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          pip install -r requirements.txt

      # --- (선택) 수동 실행 시 텔레그램 봇 자체 점검 ---
      - name: Telegram self-test
        if: ${{ github.event_name == 'workflow_dispatch' }}
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          echo "== getMe =="
          curl -s "https://api.telegram.org/bot${TELEGRAM_TOKEN}/getMe" || true
          echo
          echo "== sendMessage test =="
          curl -s --get \
            --data-urlencode "chat_id=${TELEGRAM_CHAT_ID}" \
            --data-urlencode "text=✅ Telegram self-test (AVDBS t22 v7.8)" \
            "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" || true
          echo

      # --- (강추) 쿠키 프리플라이트: 바로 인증 통과 여부 확인 ---
      - name: AVDBS cookie self-test
        env:
          AVDBS_COOKIE: ${{ secrets.AVDBS_COOKIE }}
        run: |
          echo "== /board/t22 with cookie =="
          curl -s -H "Cookie: ${AVDBS_COOKIE}" https://www.avdbs.com/board/t22 | head -n 60

      - name: Run crawler
        env:
          # Telegram
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          # Target/Auth
          AVDBS_BASE: "https://www.avdbs.com"
          AVDBS_BOARD_PATH: "/board/t22"
          AVDBS_COOKIE: ${{ secrets.AVDBS_COOKIE }}   # document.cookie 한 줄( adult_chk=1 포함 )
          # Options (테스트시에만 1로)
          FORCE_SEND_LATEST: "0"
          RESET_SEEN: "0"
          TRACE_IMAGE_DEBUG: "0"
        run: |
          python -u main.py

      - name: Commit state if changed
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name  "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add state/ || true
            git commit -m "chore(state): update seen_ids [skip ci]" || true
            git pull --rebase || true
            git push || true
          else
            echo "No state changes."
          fi
